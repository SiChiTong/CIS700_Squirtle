<launch>

<!-- Make map an argument and see how to pass it using the os.system function -->

  <!-- Argument to set the destination for the Navigation Stack-->
  <arg name="P1" default="vending_machine"/>

  <!-- Launch the node that communicates between the subroutines -->
  <node name="subsroutineStatus" type="subroutineStatus.py" pkg="squirtle_navigation" args="$(arg P1)" />

  <include file="$(find rplidar_ros)/launch/rplidar.launch" />

  <!-- Map server -->
  <arg name="map_file" default="$(find squirtle_navigation)/include/map_levine4th.yaml"/>
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />

  <arg name="initial_pose_x" default="0.0"/> 
  <arg name="initial_pose_y" default="0.0"/> 
  <arg name="initial_pose_a" default="0.0"/>
  <include file="$(find turtlebot_navigation)/launch/includes/amcl.launch.xml">
    <arg name="initial_pose_x" value="$(arg initial_pose_x)"/>
    <arg name="initial_pose_y" value="$(arg initial_pose_y)"/>
    <arg name="initial_pose_a" value="$(arg initial_pose_a)"/>
  </include>
  
  <include file="$(find turtlebot_navigation)/launch/includes/move_base.launch.xml"/>
  
  <!-- this version is overiding parameters in original package to make obstacle height parameter to 0~0.6 (for rplidar) -->
  <rosparam file="$(find wenxuanbot_navigation)/config/costmap_common_params.yaml" command="load" ns="move_base/global_costmap" />
  <rosparam file="$(find wenxuanbot_navigation)/config/costmap_common_params.yaml" command="load" ns="move_base/local_costmap" />   
  
  <!-- Activate the action server to move the robot to the destination -->
  <node name="destination_point" type="destinationPoint.py" output="screen"/>
</launch>
